<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.OrderMapper">
	<resultMap type="buy" id="buy">
		<id column="B_NUM" property="buyNo" />
		<result column="DATE_ORDER" property="dateOrder" />
		<result column="DATE_RECEIVED" property="dateReceived" />
		<result column="M_AMOUNT" property="materioalAmount" />
		<result column="B_NAME" property="buyName" />
		<result column="C_NUM" property="companyNo" />
		<result column="MATERIAL_NAME" property="materioalName" />
		<result column="M_NUM" property="materialNo" />
		<result column="M_BOX_COUNT" property="mBOXcount" />
		<result column="M_UNIT" property="mUnit" />
		<result column="M_PRICE_TOTAL" property="mTotalPrice" />
		<result column="M_NAME" property="managerName" />
		<result column="M_CONTACT" property="managerContact" />
		<result column="M_MAIL" property="mMail" />
	</resultMap>


	<!-- //Order 발주관리 페이지 - 전체 조회- 사용된 테이블 Table : BUY, COMPANY_BUY, MATERIAL(총3개) -->
	<select id="viewAllOrder" resultMap="buy">
	SELECT  
		b.B_NUM, cb.B_NAME, m.M_NUM, m.MATERIAL_NAME, b.DATE_ORDER,
		 b.DATE_RECEIVED, b.M_AMOUNT, cb.C_NUM
	FROM
		BUY b , COMPANY_BUY cb , MATERIAL m
	WHERE
		 m.C_NUM = cb.C_NUM AND m.C_NUM = b.C_NUM
	</select>

	<!-- //발주관리 -발주번호 문자열 검색으로 조회-->
	<select id="searchUser" parameterType="map" resultMap="buy">
	SELECT
   		 b.B_NUM,
   		 cb.B_NAME,
   		 m.M_NUM,
   		 m.MATERIAL_NAME,
   		 b.DATE_ORDER,
    	 b.DATE_RECEIVED,
   		 b.M_AMOUNT
	FROM
		BUY b , COMPANY_BUY cb , MATERIAL m
	WHERE
		 b.C_NUM = cb.C_NUM(+) AND m.C_NUM = b.C_NUM(+)
	AND
		 b.B_NUM LIKE '%' || #{search} || '%'
	</select> 

	<!-- 발주 날짜도 함께 검색 + 문자열 조회	 -->
 	<select id="searchUserByDateRange" parameterType="map" resultMap="buy">
	SELECT
   		 b.B_NUM,
   		 cb.B_NAME,
   		 m.M_NUM,
   		 m.MATERIAL_NAME,
   		 b.DATE_ORDER,
    	 b.DATE_RECEIVED,
   		 b.M_AMOUNT
	FROM
		BUY b , COMPANY_BUY cb , MATERIAL m
	WHERE
		 b.C_NUM = cb.C_NUM(+) AND m.C_NUM = b.C_NUM(+)
	AND
 		 b.DATE_ORDER BETWEEN #{startDate} AND #{endDate}
 	AND
		 b.B_NUM LIKE '%' || #{search} || '%'
    </select>
    
	<!-- 발주 항목 선택 열 삭제 -->
	<delete id="deleteOrdersByNo" parameterType="string">
    DELETE FROM BUY
    WHERE B_NUM = #{buyNo}
	</delete> 

	<!-- //Material 페이지 - 전체 조회- 사용된 테이블 Table : BUY, COMPANY_BUY, MATERIAL(총3개) -->
	<select id="viewAllMaterial" resultMap="buy">
	SELECT  
		b.M_PRICE_TOTAL, m.M_NUM, m.MATERIAL_NAME, m.M_BOX_COUNT, b.DATE_ORDER, m.M_UNIT, cb.B_NAME, m.C_NUM
	FROM
		BUY b , COMPANY_BUY cb , MATERIAL m
	WHERE
		 b.C_NUM = cb.C_NUM(+) AND m.C_NUM = b.C_NUM(+)
	</select>
	
	<!--원부재료 문자열 조회 -->
	<select id="searchMaterial" parameterType="map" resultMap="buy">
	SELECT  
		b.M_PRICE_TOTAL, b.M_NUM, m.MATERIAL_NAME, m.M_BOX_COUNT, b.DATE_ORDER, m.M_UNIT, cb.B_NAME, b.C_NUM
	FROM
		BUY b , COMPANY_BUY cb , MATERIAL m
	WHERE
		 b.C_NUM = cb.C_NUM(+) AND m.C_NUM = b.C_NUM(+)
	AND
		 b.M_NUM LIKE '%' || #{search} || '%' 
	</select> 

	<!-- 원부재료 선택 BUY 테이블에서 삭제 -->
	<delete id="deleteBuy" parameterType="string">
    DELETE FROM BUY
    WHERE C_NUM = #{companyNo}
	</delete> 

	<!-- COMPANY_BUY 테이블에서 삭제 -->
	<delete id="deleteCompanyBuy" parameterType="string">
    DELETE FROM COMPANY_BUY 
    WHERE C_NUM = #{companyNo}
	</delete> 

	<!-- MATERIAL 테이블에서 삭제 -->
	<delete id="deleteMaterial" parameterType="string">
    DELETE FROM MATERIAL 
    WHERE C_NUM = #{companyNo}
	</delete>

	<!-- //Contractor 협력업체정보 페이지 - 전체 조회- 사용된 테이블 Table : BUY, COMPANY_BUY, MATERIAL(총3개) -->
	<select id="viewAllContractor" resultMap="buy">
	SELECT  
		cb.B_NAME, cb.C_NUM, mr.M_NAME, mr.M_CONTACT, mr.	M_MAIL
	FROM
		COMPANY_BUY cb , MANAGER mr
	WHERE
		 cb.C_NUM = mr.C_NUM(+)
	</select>

	<!-- 원부재료 선택 BUY 테이블에서 삭제 -->
	<delete id="deleteManagerContractor" parameterType="string">
    DELETE FROM MANAGER
    WHERE C_NUM = #{companyNo}
	</delete> 

	<!-- COMPANY_BUY 테이블에서 삭제 -->
	<delete id="deleteCompanyBuyContractor" parameterType="string">
    DELETE FROM COMPANY_BUY 
    WHERE C_NUM = #{companyNo}
	</delete> 

	<!--OrderRegister 발주관리 등록 -->
	<!--material 테이블에 속한 데이터 등록-->
	<insert id="insertIntoMaterial" parameterType="buy">
    INSERT INTO MATERIAL (C_NUM, MATERIAL_NAME, M_NUM) 
    VALUES(#{companyNo}, #{materioalName}, #{materialNo})
	</insert>
	
	<!--발주 수정-->
	<!-- editOrder -->
	<select id="editOrder" parameterType="map" resultMap="buy">
    SELECT
        b.B_NUM,
        cb.B_NAME,
        m.M_NUM,
        m.MATERIAL_NAME,
        b.DATE_ORDER,
        b.DATE_RECEIVED,
        b.M_AMOUNT,
        b.C_NUM
    FROM
        BUY b
        LEFT JOIN COMPANY_BUY cb ON b.C_NUM = cb.C_NUM
        LEFT JOIN MATERIAL m ON m.C_NUM = b.C_NUM
    WHERE
        b.B_NUM = #{buyNo} and  m.M_NUM = #{materialNo}
	</select>

	<!-- updateOrder -->
	<update id="updateOrder" parameterType="map">
    UPDATE BUY
    SET
    	B_NUM = #{buyNo}
        B_NAME = #{buyName},
        M_NUM = #{materialNo},
        MATERIAL_NAME = #{materioalName},
        DATE_ORDER = #{dateOrder},
        DATE_RECEIVED = #{dateReceived},
        M_AMOUNT = #{materioalAmount},
        C_NUM = #{companyNo}
    WHERE
        B_NUM = #{buyNo}
	</update>
	
	<!-- 협력업체 company_buy 테이블 데이터 삽입 -->
	<insert id="MaterialinsertIntoCompany" parameterType="string">
    INSERT INTO COMPANY_BUY (C_NUM, B_NAME)
    VALUES (#{companyNo}, '미입력')
	</insert>

	<!-- 원부재료 등록 -->
	<insert id="MaterialinsertIntoMaterial" parameterType="map">
    INSERT INTO MATERIAL (M_NUM, MATERIAL_NAME,  M_UNIT, M_BOX_COUNT, C_NUM)
    VALUES (#{materialNo}, #{materioalName},  #{mUnit}, #{mBOXcount}, #{companyNo})
	</insert>

	<!-- 원부재료 등록 할때 buy  테이블에 등록-->
<!-- 	<insert id="MaterialinsertIntoBuyNNo" parameterType="map">
    INSERT INTO BUY (B_NUM)
    VALUES (#{buyNo})
	</insert> -->

	<!-- Buy 테이블에 데이터 삽입 -->
	<insert id="MaterialinsertIntoBuy" parameterType="map">
    INSERT INTO BUY (B_NUM, DATE_ORDER, M_NUM, M_PRICE_TOTAL, C_NUM)
    VALUES (#{buyNo}, #{dateOrder}, #{materialNo}, #{mTotalPrice}, #{companyNo})
	</insert>
	
	<!-- contractor// company_buy 테이블에 삽입 -->
	<insert id="ContractorinsertIntoCompany" parameterType="string">
    INSERT INTO COMPANY_BUY (C_NUM, B_NAME)
    VALUES (#{companyNo}, #{buyName})
	</insert>

	<!-- contractor// manager 테이블에 삽입 -->
	<insert id="ContractorinsertIntoManager" parameterType="map">
    INSERT INTO MANAGER (C_NUM, M_NAME, M_CONTACT, M_MAIL)
    VALUES (#{companyNo}, #{managerName}, #{managerContact}, #{mMail})
	</insert>
	
	<!--Order 페이지 수정  -->
	<!-- updateMaterial -->
	<update id="OrderupdateMaterial" parameterType="map">
    UPDATE MATERIAL
    SET
        MATERIAL_NAME = #{materioalName}
    WHERE
        M_NUM = #{materialNo} 
</update>

<update id="OrderupdateBuy" parameterType="map">
    UPDATE BUY
    SET
        DATE_ORDER = TO_DATE(#{dateOrder}, 'YYYY-MM-DD'),
        DATE_RECEIVED = TO_DATE(#{dateReceived}, 'YYYY-MM-DD'),
        M_AMOUNT = #{materioalAmount},
        M_NUM = #{materialNo}
    WHERE
        B_NUM = #{buyNo} 
</update>
	
	<!-- ContractorEdit -->
	<select id="ContractorEdit" parameterType="map" resultMap="buy">
   	SELECT  
		cb.B_NAME, cb.C_NUM, mr.M_NAME, mr.M_CONTACT, mr.	M_MAIL
	FROM
		COMPANY_BUY cb , MANAGER mr
	WHERE
		 cb.C_NUM = mr.C_NUM and  cb.C_NUM = #{companyNo}
	</select>
	
	 <update id="updateContractorCompany" parameterType="map">
        UPDATE 
        COMPANY_BUY
        SET 
        B_NAME = #{buyName}
        WHERE 
		C_NUM LIKE #{companyNo}
    </update>

    <update id="updateConstractorManager" parameterType="map">
        UPDATE 
        MANAGER
        SET 
        M_NAME = #{managerName},
        M_CONTACT = #{managerContact},
        M_MAIL = #{mMail}
        WHERE 
		C_NUM LIKE #{companyNo}
    </update>
    
    <select id="ConstractorList" resultMap="buy" parameterType="Map">
		SELECT * FROM COMPANY_BUY  where
		<!--choose 사용 -->
		<choose>
			<when test="kind.equals('companyNo')">
				C_NUM like '%' || #{search} || '%'
			</when>
			<when test="kind.equals('buyName')">
				B_NAME like '%' || #{search} || '%'
			</when>
			<otherwise>
				${kind} like '%'||#{search}||'%'
			</otherwise>
		</choose>
	</select>
	
</mapper>